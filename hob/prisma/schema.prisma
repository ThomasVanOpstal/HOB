// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Service {
  id String @id @default(cuid())
  Category Category @default(Beauty)
  Subcategory String 
  Type String
  name String
  Description String
  Price Float
  Image String
  Time Int
  Options ServiceOption[]
  Treatments ServiceTreatment[]
  isAvailable Boolean @default(true)

}
model Option {
  id String @id @default(cuid())
  Category Category @default(Beauty)
  Subcategory String[]
  type String
  Description String
  Price Float
  Image String
  Name String
  Time Int
  Service ServiceOption[]
  Treatment OptionTreatment[]
  isAvailable Boolean @default(true)
}
model ServiceOption{
  service    Service     @relation(fields: [serviceId], references: [id])
  serviceId  String 
  Option   Option @relation(fields: [optionId], references: [id])
  optionId String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([serviceId, optionId])
}
enum Category {
  Beauty
  Skin
  Body 
}

model Treatment {
  id String @id @default(cuid())
  price Float
  name String
  Time Int
  description String
  Service ServiceTreatment[]
  Option OptionTreatment[]
}
model ServiceTreatment{
  service    Service     @relation(fields: [serviceId], references: [id])
  serviceId  String 
  Treatment   Treatment @relation(fields: [treatmentId], references: [id])
  treatmentId String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([serviceId, treatmentId])
}
model OptionTreatment{
  option    Option     @relation(fields: [optionId], references: [id])
  optionId  String 
  Treatment   Treatment @relation(fields: [treatmentId], references: [id])
  treatmentId String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([optionId, treatmentId])
}